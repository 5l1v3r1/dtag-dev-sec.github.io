<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DTAG Community Honeypot Project</title>
    <description></description>
    <link>http://dtag-dev-sec.github.io//</link>
    <atom:link href="http://dtag-dev-sec.github.io//feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 21 Feb 2016 21:33:42 +0100</pubDate>
    <lastBuildDate>Sun, 21 Feb 2016 21:33:42 +0100</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>T-Pot - Important Update Notification (docker 1.10) </title>
        <description>&lt;p&gt;Yesterday Docker released version 1.10 (http://blog.docker.com/2016/02/docker-1-10/). While this release will
improve on security and bring lots of useful features the automatic upgrade within T-Pot (http://dtag-dev-sec.github.io/feature/2015/10/23/updated-docker.html) will hang.&lt;/p&gt;

&lt;p&gt;You have to manually upgrade Docker to the latest version in order for your T-Pot installation to work properly.&lt;/p&gt;

&lt;p&gt;Please login to T-Pot and run the following commands:&lt;/p&gt;

&lt;p&gt;sudo apt-get update -y&lt;/p&gt;

&lt;p&gt;sudo apt-get upgrade -y&lt;/p&gt;

&lt;p&gt;sudo apt-get upgrade docker-engine -y&lt;/p&gt;

&lt;p&gt;Please answer the following question with (N)o for T-Pot to work correctly:&lt;/p&gt;

&lt;p&gt;Configuration file ‘/etc/default/docker’&lt;/p&gt;

&lt;p&gt;==&amp;gt; Modified (by you or by a script) since installation.&lt;/p&gt;

&lt;p&gt;==&amp;gt; Package distributor has shipped an updated version.&lt;/p&gt;

&lt;p&gt;What would you like to do about it ?  Your options are:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Y or I  : install the package maintainer&#39;s version

N or O  : keep your currently-installed version

  D     : show the differences between the versions

  Z     : start a shell to examine the situation
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The default action is to keep your current version.&lt;/p&gt;

&lt;p&gt;*** docker (Y/I/N/O/D/Z) [default=N] ? N&lt;/p&gt;

&lt;p&gt;Installing new version of config file /etc/bash_completion.d/docker …&lt;/p&gt;

&lt;p&gt;docker start/running, process 92746&lt;/p&gt;

&lt;p&gt;Processing triggers for libc-bin (2.19-0ubuntu6.6) …&lt;/p&gt;

&lt;p&gt;Processing triggers for ureadahead (0.100.0-16) …&lt;/p&gt;

&lt;p&gt;If everything worked Docker will calculate SHA256 checksums for docker related data (https://docs.docker.com/engine/migration/). Depending on your hardware this might take some time during which the containers will not be available. Please wait until all containers are up and running again before you reboot your machine.&lt;/p&gt;

&lt;p&gt;If you are in doubt please run “sudo cat /etc/default/docker” and if the configs are identical:&lt;/p&gt;

&lt;p&gt;’’’# Docker Upstart and SysVinit configuration file&lt;/p&gt;

&lt;p&gt;#Customize location of Docker binary (especially for development testing).&lt;/p&gt;

&lt;p&gt;#DOCKER=”/usr/local/bin/docker”&lt;/p&gt;

&lt;h1 id=&quot;use-dockeropts-to-modify-the-daemon-startup-options&quot;&gt;Use DOCKER_OPTS to modify the daemon startup options.&lt;/h1&gt;

&lt;p&gt;#DOCKER_OPTS=”–dns 8.8.8.8 –dns 8.8.4.4”&lt;/p&gt;

&lt;h1 id=&quot;if-you-need-docker-to-use-an-http-proxy-it-can-also-be-specified-here&quot;&gt;If you need Docker to use an HTTP proxy, it can also be specified here.&lt;/h1&gt;

&lt;p&gt;#export http_proxy=”http://127.0.0.1:3128/”&lt;/p&gt;

&lt;h1 id=&quot;this-is-also-a-handy-place-to-tweak-where-dockers-temporary-files-go&quot;&gt;This is also a handy place to tweak where Docker’s temporary files go.&lt;/h1&gt;

&lt;p&gt;#export TMPDIR=”/mnt/bigdrive/docker-tmp”&lt;/p&gt;

&lt;p&gt;DOCKER_OPTS=”-r=false”’’’&lt;/p&gt;
</description>
        <pubDate>Fri, 05 Feb 2016 14:37:42 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//feature/2016/02/05/docker.1.10.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//feature/2016/02/05/docker.1.10.html</guid>
        
        <category>featured</category>
        
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot - Important Update Notification </title>
        <description>&lt;p&gt;Last spring we released T-Pot and ever since, Docker evolved rapidly with new versions, new features, and eventually a new repository. With regards to early releases of T-Pot and the fast development of Docker, we manually pinned the Docker versions used to the 1.5.x and 1.6.x branches. Now, with the latest Docker releases and Dockers’ switch to a new repository for Ubuntu (and deprecating the one we have been using), we updated the T-Pot ISO and the GitHub project accordingly.&lt;/p&gt;

&lt;p&gt;So, from now on, we will stick to the latest Docker version.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;But, why is this important to you?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Well, Docker deprecated their old versions and will no longer serve images to old versions. So you will have to update in order to keep the system fully functional.&lt;/p&gt;

&lt;p&gt;If you want to upgrade your existing installation you can download &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/blob/master/upgrade.sh&quot;&gt;this upgrade script&lt;/a&gt;:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Login to your T-Pot as &lt;em&gt;tsec&lt;/em&gt; and execute the following commands, &lt;strong&gt;but only run the script once&lt;/strong&gt;!&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt;git clone https://github.com/dtag-dev-sec/tpotce.git
sudo tpotce/./upgrade.sh
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If everything worked fine the machine will reboot.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Check if your containers are running correctly by either by pressing CTRL+F2 or by logging in as &lt;em&gt;tsec&lt;/em&gt; and &lt;code&gt;sudo status.sh&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Otherwise, if you wish to perform a new installation you can download the new ISO &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In case you encounter any problems, feel free to post an issue &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce/issues&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Oct 2015 15:37:42 +0200</pubDate>
        <link>http://dtag-dev-sec.github.io//feature/2015/10/23/updated-docker.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//feature/2015/10/23/updated-docker.html</guid>
        
        <category>featured</category>
        
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Turn your existing Ubuntu into T-Pot, automatically.</title>
        <description>&lt;p&gt;You have a spare Ubuntu system in your datacenter and want to give it a reason to live? You decided that dedicating your CPU cycles to searching for extraterrestrial life is so 1990?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Then why don’t you contribute your idle system to making the internet a little bit more secure?&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;In case you already have an Ubuntu 14.04.x running in your datacenter and are unable to &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/03/17/concept.html#prebuilt&quot;&gt;install from an ISO image&lt;/a&gt;, we have created a &lt;a href=&quot;https://github.com/dtag-dev-sec/t-pot-autoinstall&quot;&gt;script&lt;/a&gt; that converts your Ubuntu base install into a full-fledged &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/03/17/concept.html&quot;&gt;T-Pot&lt;/a&gt; within just a couple of minutes.&lt;/p&gt;

&lt;p&gt;Just check out the script from the &lt;a href=&quot;https://github.com/dtag-dev-sec/t-pot-autoinstall&quot;&gt;repository&lt;/a&gt;  and run it.&lt;/p&gt;

&lt;p&gt;In case you have limited resources, you can choose to install a “&lt;em&gt;honeypot-only&lt;/em&gt;”-version, which lacks the suricata and kibana dashboard (ELK) component but runs just fine on lower equipped machines with just 1GB of RAM.&lt;/p&gt;

</description>
        <pubDate>Mon, 11 May 2015 16:34:25 +0200</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/05/11/t-pot-autoinstall.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/05/11/t-pot-autoinstall.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>T-Pot: A Multi-Honeypot Platform</title>
        <description>&lt;p&gt;We created a honeypot platform, which is based on the well-established honeypots &lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;, the network IDS/IPS &lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt;, &lt;a href=&quot;http://www.elasticsearch.org/overview/&quot;&gt;elasticsearch-logstash-kibana&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; and some
&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; magic. We want to make this technology available to everyone who is interested and release it as a Community Edition. We want to encourage you to participate.&lt;/p&gt;

&lt;h1 id=&quot;tldr&quot;&gt;TL;DR&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;Meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. Use at least 2GB RAM and 40GB disk space as well as a working internet connection.&lt;/li&gt;
  &lt;li&gt;Download the &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;tpotce.iso&lt;/a&gt; or &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Install the system in a &lt;a href=&quot;#vm&quot;&gt;VM&lt;/a&gt; or on &lt;a href=&quot;#hw&quot;&gt;physical hardware&lt;/a&gt; with &lt;a href=&quot;#placement&quot;&gt;internet access&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Sit tight - &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;watch&lt;/a&gt; and &lt;a href=&quot;#kibana&quot;&gt;analyze&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We have created a nice &lt;a href=&quot;https://youtu.be/dWbJS_9sFNE&quot;&gt;installation video&lt;/a&gt; for you in case you run into problems. Please
be advised, that one CPU is fully sufficient to run T-Pot.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Update:&lt;/em&gt; In case you already have an Ubuntu 14.04.x running in your datacenter and are unable to install from an ISO image, we have created a &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/05/11/t-pot-autoinstall.html&quot;&gt;script&lt;/a&gt; that converts your Ubuntu base install into a full-fledged T-Pot within just a couple of minutes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Please note&lt;/em&gt;: We will ensure the compatibility to the Intel NUC platform, as we really like this handy format.&lt;/p&gt;

&lt;h1 id=&quot;documentation&quot;&gt;Documentation&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#background&quot;&gt;Background&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#t-pot&quot;&gt;T-Pot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#concept&quot;&gt;Technical Concept&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#requirements&quot;&gt;System Requirements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#installation&quot;&gt;Installation&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#prebuilt&quot;&gt;Prebuilt ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#createiso&quot;&gt;Create your own ISO Image&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#vm&quot;&gt;Running in a VM&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#hardware&quot;&gt;Running on Hardware&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#firstrun&quot;&gt;First Run&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#placement&quot;&gt;System Placement&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#options&quot;&gt;Options&lt;/a&gt;
    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#ssh&quot;&gt;Enabling SSH&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#kibana&quot;&gt;Kibana Dashboard&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#maintenance&quot;&gt;Maintenance&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#submission&quot;&gt;Community Data Submission&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#considerations&quot;&gt;Considerations&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#qa&quot;&gt;Q&amp;amp;A&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#contact&quot;&gt;Contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#licenses&quot;&gt;Licenses&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;background&quot;&gt;&lt;/a&gt;
# Background
In the last couple of years, we at Deutsche Telekom’s honeypot project have setup several honeypots in our home networks, Telekom’s access networks and at partner locations all around the globe. The data gathered by those honeypots is a core component for our Early Warning System and feeds the data for the &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; / &lt;a href=&quot;http://securitydashboard.eu&quot;&gt;Securitydashboard&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Our experience in setting up honeypot systems at several locations showed that many people were interested in running some kind of honeypot sensor, but were a bit overwhelmed by the setup procedure and maintenance. In the past, we have gathered some experience with configuration management and finally decided to create a honeypot system that is easy to deploy, low maintenance and combines some of the best honeypot technologies in one system.&lt;/p&gt;

&lt;p&gt;Lucky for us, a new technology called &lt;a href=&quot;https://docker.com&quot;&gt;docker&lt;/a&gt; emerged and we thought we’d give it a try…&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;t-pot&quot;&gt;&lt;/a&gt;
# T-Pot
Fast forward a couple of months: We finally created a multi-honeypot platform, that we want to make available as a &lt;em&gt;public beta&lt;/em&gt; in order to foster a community and make this technology available to all people interested.
Aside from this, we also want to motivate people to contribute to security research and maybe take a first step towards cooperation and data exchange.&lt;/p&gt;

&lt;p&gt;Our solution is no silver bullet to security, no intrusion prevention system and it’s no fancy, cutting edge APT detection tool… &lt;br /&gt;&lt;br /&gt;
But let’s focus on what it is: Some of the best honeypot technologies available, easy to deploy and simple use. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;T-Pot is based on well-established honeypot daemons, IDS and tools for attack submission. &lt;br /&gt;
The idea behind T-Pot is to create a system, whose entire TCP network range as well as some important UDP services act as honeypot, and to forward all incoming attack traffic to the best suited honeypot daemons in order to respond and process it.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;concept&quot;&gt;&lt;/a&gt;
# Technical Concept&lt;/p&gt;

&lt;p&gt;T-Pot is based on a vanilla Ubuntu 14.04.02 ISO image. 
The honeypot daemons as well as other support components we used have been paravirtualized using &lt;a href=&quot;http://docker.io&quot;&gt;docker&lt;/a&gt;.
This allowed us to run multiple honeypot daemons on the same network interface without problems make the entire system very low maintenance. &lt;br /&gt;The encapsulation of the honeypot daemons in docker provides a good isolation of the runtime environments and easy update mechanisms.&lt;/p&gt;

&lt;p&gt;In T-Pot we combine existing honeypots (&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;) with the network IDS/IPS &lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt;, the data monitoring and visualization triple &lt;a href=&quot;http://www.elasticsearch.org/overview/&quot;&gt;elasticsearch-logstash-kibana&lt;/a&gt;, and our own data submission &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; which now also supports hpfeeds honeypot data sharing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/images/tpot.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/assets/images/tpot.png&quot; alt=&quot;Architecture&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;All data in docker is volatile. Once a docker container crashes, all data produced within its environment is gone and a fresh instance is restarted. Hence, for some data that needs to be persistent, like config files etc., we have a persistent data storage (mounted to /data/ on the host) in order to make it available and persistent across container or system restarts.&lt;/p&gt;

&lt;p&gt;Basically, what happens when the system is booted up is the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;start host system&lt;/li&gt;
  &lt;li&gt;start all docker containers (honeypots, IDS, elk, ewsposter)&lt;/li&gt;
  &lt;li&gt;ewsposter periodically checks the honeypot containers for new attacks and submits data to our community backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Within the T-Pot project, we provide all the tools and documentation necessary to build your own honeypot system and contribute to our &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our  &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; that is powered by this community data.&lt;/p&gt;

&lt;p&gt;The source code and configuration files are stored in individual github repositories, which are linked below. The docker images are tailored to be run in this environment. If you want to run the docker images separately, make sure you study the upstart scripts, as they provide an insight in how we configured them.&lt;/p&gt;

&lt;p&gt;The individual docker configurations etc. we used can be found here:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/elk&quot;&gt;elasticsearch / logstash / kibana&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/suricata&quot;&gt;suricata&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/honeytrap&quot;&gt;honeytrap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/kippo&quot;&gt;kippo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/glastopf&quot;&gt;glastopf&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/dionaea&quot;&gt;dionaea&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;requirements&quot;&gt;&lt;/a&gt;
# System Requirements
Whether you install it on &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;, make sure your designated T-Pot system meets the following minimum system requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;2 GB RAM (4 GB recommended)&lt;/li&gt;
  &lt;li&gt;40 GB disk (64 GB SSD recommended)&lt;/li&gt;
  &lt;li&gt;Working internet connection / network via DHCP&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;installation&quot;&gt;&lt;/a&gt;
# Installation
The installation of T-Pot is simple. Please be advised that you should have an internet connection up and running
as even the installation iso file will need the basic docker containers to be pulled from docker hub.&lt;/p&gt;

&lt;p&gt;First, decide if you want to download our prebuilt installation ISO image &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;tpotce.iso&lt;/a&gt; &lt;strong&gt;&lt;em&gt;or&lt;/em&gt;&lt;/strong&gt; &lt;a href=&quot;#createiso&quot;&gt;create it yourself&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Second, decide where you want to let the system run: &lt;a href=&quot;#hardware&quot;&gt;real hardware&lt;/a&gt; or in a &lt;a href=&quot;#vm&quot;&gt;virtual machine&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;prebuilt&quot;&gt;&lt;/a&gt;
## Prebuilt ISO Image
We provide an installation ISO image for download (~610MB), which is created using the same &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; you can use yourself in order to create your own image. It will basically just save you some time downloading components and creating the ISO image. 
You can download the prebuilt installation image &lt;a href=&quot;http://community-honeypot.de/tpotce.iso&quot;&gt;here&lt;/a&gt; and jump to the &lt;a href=&quot;#vm&quot;&gt;installation&lt;/a&gt; section. The ISO image is hosted by our friends from &lt;a href=&quot;http://www.strato.de&quot;&gt;Strato&lt;/a&gt; / &lt;a href=&quot;http://www.cronon.de&quot;&gt;Cronon&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;shasum tpotce.iso
3b8f15eba2a478b106b202726661ce75c8fe7acc tpotce.iso
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a name=&quot;createiso&quot;&gt;&lt;/a&gt;
## Create your own ISO Image
For transparency reasons and to give you the ability to customize your install, we provide you the &lt;a href=&quot;https://github.com/dtag-dev-sec/tpotce&quot;&gt;tool&lt;/a&gt; that enables you to create your own ISO installation image.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Requirements to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ubuntu 14.04.2 or 14.10 as host system (others &lt;em&gt;may&lt;/em&gt; work, but remain untested)&lt;/li&gt;
  &lt;li&gt;2GB of free memory&lt;/li&gt;
  &lt;li&gt;4GB of free storage&lt;/li&gt;
  &lt;li&gt;A working internet connection&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;How to create the ISO image:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Clone the repository and enter it.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; git clone https://github.com/dtag-dev-sec/tpotce.git
 cd tpotce
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Invoke the script that builds the ISO image. 
The script will download and install dependencies necessary to build the image on the invoking machine. It will further download the Ubuntu base image (~625MB) which T-Pot is based on.&lt;/p&gt;

    &lt;pre&gt;&lt;code&gt; sudo ./makeiso.sh After successful build, you will find the ISO image `tpotce.iso` in your directory. 
&lt;/code&gt;&lt;/pre&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;vm&quot;&gt;&lt;/a&gt;
## Running in VM
You may want to run T-Pot in a virtualized environment. The virtual system configuration depends on your virtualization provider.&lt;/p&gt;

&lt;p&gt;We successfully tested T-Pot with &lt;a href=&quot;https://www.virtualbox.org&quot;&gt;VirtualBox&lt;/a&gt; and &lt;a href=&quot;http://www.vmware.com&quot;&gt;VMWare&lt;/a&gt; with just little modifications to the default machine configurations.&lt;/p&gt;

&lt;p&gt;It is important to make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt; and assign a virtual harddisk &amp;gt;=40GB, &amp;gt;=2GB RAM and bridged networking to T-Pot.&lt;/p&gt;

&lt;p&gt;You need to enable promiscuous mode for the network interface for suricata to work properly. Make sure you enable it during configuration.&lt;/p&gt;

&lt;p&gt;If you want to use a wifi card as primary NIC for T-Pot (which we do not recommend, but in some cases, it might be necessary), mind that not all network interface drivers support all wireless cards. E.g. in VirtualBox, you then have to choose the &lt;em&gt;“MT SERVER”&lt;/em&gt; model of the NIC.&lt;/p&gt;

&lt;p&gt;Last, mount the &lt;code&gt;tpotce.iso&lt;/code&gt; ISO to the VM and and continue with the installation. You can now jump &lt;a href=&quot;#firstrun&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;hardware&quot;&gt;&lt;/a&gt;
## Running on Hardware
If you decided to run T-Pot on dedicated hardware, just follow these steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Burn a CD from the ISO image or make a bootable USB stick using the image. &lt;br /&gt;Whereas most CD burning tools allow you to burn from ISO images, the procedure to create a bootable USB stick from an ISO image depends on your system. There are various Windows GUI tools available, e.g. &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-windows&quot;&gt;this tip&lt;/a&gt; might help you.&lt;br /&gt; On &lt;a href=&quot;http://askubuntu.com/questions/59551/how-to-burn-a-iso-to-a-usb-device&quot;&gt;Linux&lt;/a&gt; or &lt;a href=&quot;http://www.ubuntu.com/download/desktop/create-a-usb-stick-on-mac-osx&quot;&gt;MacOS&lt;/a&gt; you can use the tool &lt;em&gt;dd&lt;/em&gt; or google for GUI tools.&lt;/li&gt;
  &lt;li&gt;Boot from the USB stick and install.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a name=&quot;firstrun&quot;&gt;&lt;/a&gt;
## First Run
The installation requires very little interaction, only some locales and keyboard settings have to be answered. Most other things should be configured automatically. The system will reboot a couple of times. Make sure it can access the internet as it needs to download the dockerized honeypot components. Depending on your network connection, the installation may take some time. During our tests, the installation was finished within 30 minutes.&lt;/p&gt;

&lt;p&gt;Once the installation is finished, the system will automatically reboot and you will be presented with the T-Pot login screen. The user credentials for the first login are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;user: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
  &lt;li&gt;pass: &lt;em&gt;tsec&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You will need to set a new password after first login.&lt;/p&gt;

&lt;p&gt;All honeypot services are started automatically.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;placement&quot;&gt;&lt;/a&gt;
# System Placement
Make sure your system is reachable through the internet. Otherwise it will not capture any attacks, other than the ones from your hostile internal network! We recommend you put it in an unfiltered zone, where all TCP and UDP traffic is forwarded to T-Pot’s network interface.&lt;/p&gt;

&lt;p&gt;If you are behind a NAT gateway (e.g. home router), here is a list of ports that should be forwarded to T-Pot.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Resonding Honeypot       &lt;/th&gt;
      &lt;th&gt;Transport        &lt;/th&gt;
      &lt;th&gt;Port(s) to forward&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;21, 42, 135, 443, 445, 1433, 3306, 5060, 5061, 8080&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;dionaea&lt;/td&gt;
      &lt;td&gt;UDP&lt;/td&gt;
      &lt;td&gt;69, 5060&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;kippo&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;22&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;honeytrap&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;25, 110, 139, 3389, 4444, 4899, 5900, 21000&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;glastopf&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;80&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Basically, you can forward as many TCP ports as you want, as honeytrap dynamically binds any TCP port that is not covered by the other honeypot daemons.&lt;/p&gt;

&lt;p&gt;In case you want external SSH access, forward TCP port 64295 to T-Pot, see below.&lt;/p&gt;

&lt;p&gt;T-Pot requires outgoing http and https connections for updates (ubuntu, docker) and attack submission (ewsposter, hpfeeds).&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;options&quot;&gt;&lt;/a&gt;
# Options
The system is designed to run without any interaction or maintenance and contribute to the community.
As we know, for some this may not be enough. So here come some ways to further inspect the system and change configuration parameters.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;ssh&quot;&gt;&lt;/a&gt;
## Enabling SSH
By default, the ssh daemon is disabled. However, if you want to be able to login via SSH, make sure you enable it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/.ssh_enable.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will start the SSH daemon on port &lt;strong&gt;64295&lt;/strong&gt;. It is configured to prevent password login and use pubkey-authentication instead, so make sure you get your key on the system. Just copy it to &lt;code&gt;/home/tsec/.ssh/authorized_keys&lt;/code&gt; and set the appropriate permissions (&lt;code&gt;chmod 600 authorized_keys&lt;/code&gt;) as well as the right ownership (&lt;code&gt;chown tsec:tsec authorized_keys&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;In addition to this - and maybe easier than getting a pubkey on the system - you can enable two-factor authentication (2fa) and use an app like &lt;a href=&quot;https://support.google.com/accounts/answer/1066447?hl=en&quot;&gt;Google Authenticator&lt;/a&gt; as a second authentication factor.&lt;/p&gt;

&lt;p&gt;Make sure that you invoke the following script as the user &lt;em&gt;tsec&lt;/em&gt;. &lt;strong&gt;&lt;em&gt;Do not run it as root or via sudo&lt;/em&gt;&lt;/strong&gt;. Otherwise the setup of two factor authentication will fail.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;~/2fa_enable.sh
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don’t forget to enable ssh, if you haven’t done this before. If you already have enabled ssh, restart the ssh daemon &lt;code&gt;sudo service ssh restart&lt;/code&gt; to make sure that the changes are active. &lt;br /&gt;
You can then login using the password you set for the user &lt;em&gt;tsec&lt;/em&gt; and use the app as the second authentication factor.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;kibana&quot;&gt;&lt;/a&gt;
## Kibana Dashboard
To access the kibana dashboard, make sure you have &lt;a href=&quot;#ssh&quot;&gt;enabled SSH&lt;/a&gt; on T-Pot, then create a &lt;a href=&quot;http://explainshell.com/explain?cmd=ssh+-p+64295+-l+tsec+-N+-L8080%3A127.0.0.1%3A64296+yourHoneypotsPublicIPaddress&quot;&gt;port forward&lt;/a&gt;  and make sure you leave the terminal open.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ssh -p 64295 -l tsec -N -L8080:127.0.0.1:64296 &amp;lt;yourHoneypotsPublicIPaddress&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, open a web browser and access &lt;a href=&quot;http://127.0.0.1:8080&quot;&gt;http://127.0.0.1:8080&lt;/a&gt;. The kibana dashboard can be customized to fit your needs. By default, we haven’t added any filtering other than outgoing ewsposter submission, because the filters depend on your setup. E.g. you might want to filter out your incoming administrative ssh connections and connections to update servers.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;maintenance&quot;&gt;&lt;/a&gt;
## Maintenance
As mentioned before, the system was designed to be low maintenance. Basically, there is nothing you have to do but let it run. If one of the dockerized daemon fails, it will restart. If this fails, all docker container will be restarted.&lt;/p&gt;

&lt;p&gt;If you run into any problems, a reboot may fix it. ;)&lt;/p&gt;

&lt;p&gt;If new versions of the components involved appear, we will test them and build new docker images. Those new docker images will be pushed to the system and get restarted.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;submission&quot;&gt;&lt;/a&gt;
## Community Data Submission
We provide T-Pot in order to make it accessible to all people who are interested in honeypot deployment. By default, the data captured is submitted to a community backend. This community backend uses the data to feed a &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;community data view&lt;/a&gt;, a separate channel on our own &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt;, which is powered by our own set of honeypots.
You may opt out the submission to our community server by disabling it in the &lt;code&gt;[EWS]&lt;/code&gt;-section of the config file &lt;code&gt;/data/ews/conf/ews.cfg&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Further we support &lt;a href=&quot;https://github.com/rep/hpfeeds&quot;&gt;hpfeeds&lt;/a&gt;. It is disabled by default as you need to supply a  channel you want to post to and enter your user credentials. To enable hpfeeds, edit the config file &lt;code&gt;/data/ews/conf/ews.cfg&lt;/code&gt;, section &lt;code&gt;[HPFEED]&lt;/code&gt; and set it to true.&lt;/p&gt;

&lt;p&gt;Data is submitted in structured ews-format, a XML stucture. Hence, you can parse out the information that is relevant to you.&lt;/p&gt;

&lt;p&gt;We encourage you not to disable the data submission as the main purpose of the community is sharing.&lt;/p&gt;

&lt;p&gt;The &lt;em&gt;ews.cfg&lt;/em&gt; file contains many configuration parameters required for the system to run. You can - if you want - add an email address, that is sent within your submissions, in order to be able to identify your requests later. Further you can add a proxy.
Please do not change anything other than those settings and only if you absolutely need to. Otherwise, the system may not work as expected.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;roadmap&quot;&gt;&lt;/a&gt;
# Roadmap
We planned a couple of features we haven’t been able to implement yet. Those features will most likely be added through automatic updates of the docker containers.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Import ews json log into kibana dashboard in order to visualize captured attack data&lt;/li&gt;
  &lt;li&gt;Filter out false positives in kibana dashboard (e.g. update connections)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&quot;considerations&quot;&gt;&lt;/a&gt;
# Considerations
- We don’t have access to your system. So we cannot remote-assist when you break your configuration. But you can simply reinstall. 
- The software was designed with best effort security, not to be in stealth mode. Because then, we probably would not be able to provide those kind of honeypot services.
- You install and you run within your responsibility. Choose your deployment wisely as a system compromise can never be ruled out.
- Honeypots should - by design - not host any sensitive data. Make sure you don’t add any.
- By default, your data is submitted to the community dashboard. You can disable this in the config. But hey, wouldn’t it be better to contribute to the community? 
- By default, hpfeeds submission is disabled. You can enable it in the config section for hpfeeds. This is due to the nature of hpfeeds. We do not want to spam any channel, so you can choose where to post your data and who to share it with.&lt;br /&gt;
- Malware submission is enabled by default but malware is currently not processed on the submission backend. This may be added later, but can also be disabled in the ews.cfg config file. 
- The system restarts the docker containers every night to avoid clutter and reduce disk consumption. &lt;em&gt;All data in the container is then reset.&lt;/em&gt; The data displayed in kibana is kept for the last 30 days.
- This software is in &lt;em&gt;beta status&lt;/em&gt;, so it may contain bugs.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;qa&quot;&gt;&lt;/a&gt;
# Q&amp;amp;A
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;How do I enable SSH?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt; &lt;strong&gt;A&lt;/strong&gt; : Run the &lt;em&gt;ssh_enable.sh&lt;/em&gt; script in tsec’s home directory. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;On what port is the SSH daemon listening?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt;: OpenSSH is listening on port 64295. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;Why didn’t you add honeypot XYZ?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : We added the honeypot daemons which we thought were most suitable and we have good experience with. If you think a crucial honeypot daemon is missing, let us &lt;a href=&quot;#contact&quot;&gt;know&lt;/a&gt;. Maybe someday we will add it.
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;Why is my installation failing?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : Some people have tried to install it in VirtualBox using the default disk size of 8GB. This is not enough storage and the installation will fail. Same applies to VMWare’s Easy Install. Make sure you meet the &lt;a href=&quot;#requirements&quot;&gt;system requirements&lt;/a&gt;. T-Pot requires at least 2GB RAM and 40GB disk space. And make sure that a working internet connection is available. 
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I try to login via ssh but my ssh key gets rejected?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt;: Are you sure you are connecting to the right port? The SSH honeypot &lt;em&gt;kippo&lt;/em&gt; is listening on port 22. &lt;em&gt;OpenSSH&lt;/em&gt; is listening on port 64295. More &lt;a href=&quot;#ssh&quot;&gt;here&lt;/a&gt;.
- &lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I enabled two-factor authentication, but all I get is a password prompt and it does not accept my password. What happened?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : You probably invoked the &lt;code&gt;2fa_enable.sh&lt;/code&gt; script (a) as &lt;em&gt;root&lt;/em&gt; or (b) via &lt;em&gt;sudo&lt;/em&gt;, and you should have invoked it as the user &lt;em&gt;tsec&lt;/em&gt;.&lt;br /&gt;Fix for (a):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    sudo mv /root/.google_authenticator /home/tsec/.google_authenticator
    sudo chown tsec:tsec /home/tsec/.google_authenticator &amp;lt;br&amp;gt;Fix for (b): 

    sudo chown tsec:tsec /home/tsec/.google_authenticator
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Q&lt;/strong&gt; : &lt;strong&gt;&lt;em&gt;I cannot expose T-Pot to full internet access, but I still want to participate. Can you tell me which ports should be forwarded to T-Pot?&lt;/em&gt;&lt;/strong&gt; &lt;br /&gt;&lt;strong&gt;A&lt;/strong&gt; : T-Pot works best when exposed to the unfiltered internet. If you are unable to place it in that way, &lt;a href=&quot;#placement&quot;&gt;here&lt;/a&gt; is a list of ports that should be forwarded to T-Pot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;…  to  be extended depending on feedback.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;contact&quot;&gt;&lt;/a&gt;
# Contact
We provide the software as it is as a Community Edition. T-Pot is designed to run out of the box and with no maintenance effort. &lt;br /&gt;
We hope you understand that we are unable to provide support on an individual basis. We will try to answer common  questions and problems in the Q&amp;amp;A section.&lt;/p&gt;

&lt;p&gt;For bugs, feature ideas and general feedback you can write to cert @ telekom.de.&lt;/p&gt;

&lt;p&gt;&lt;a name=&quot;licenses&quot;&gt;&lt;/a&gt;
# Licenses
The software that T-Pot is built on, uses the following licenses.
&lt;br /&gt;GPLv2: &lt;a href=&quot;http://src.carnivore.it/dionaea/tree/LICENSE&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;http://src.carnivore.it/honeytrap/tree/LICENSE&quot;&gt;honeytrap (by Tillmann Werner)&lt;/a&gt;, &lt;a href=&quot;http://suricata-ids.org/about/open-source/&quot;&gt;suricata&lt;/a&gt;
&lt;br /&gt;GPLv3: &lt;a href=&quot;https://github.com/dtag-dev-sec/ews/blob/master/GPL&quot;&gt;ewsposter (by Markus Schroer)&lt;/a&gt;, &lt;a href=&quot;https://github.com/glastopf/glastopf/blob/master/GPL&quot;&gt;glastopf (by Lukas Rist)&lt;/a&gt;
&lt;br /&gt;Apache 2 License: &lt;a href=&quot;https://github.com/elasticsearch/elasticsearch/blob/master/LICENSE.txt&quot;&gt;elasticsearch&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/logstash/blob/master/LICENSE&quot;&gt;logstash&lt;/a&gt;, &lt;a href=&quot;https://github.com/elasticsearch/kibana/blob/master/LICENSE.md&quot;&gt;kibana&lt;/a&gt;, [docker] (https://github.com/docker/docker/blob/master/LICENSE)
&lt;br /&gt;&lt;a href=&quot;https://github.com/desaster/kippo/blob/master/doc/COPYRIGHT&quot;&gt;kippo copyright disclaimer (by Upi Tamminen)&lt;/a&gt; 
&lt;br /&gt;&lt;a href=&quot;http://www.ubuntu.com/about/about-ubuntu/licensing&quot;&gt;Ubuntu licensing&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Mar 2015 10:29:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/17/concept.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/17/concept.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Update of Sicherheitstacho</title>
        <description>&lt;p&gt;We have just now updated our &lt;a href=&quot;http://www.sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; to be able to show the data
from the community honeypots. Just follow this &lt;a href=&quot;http://sicherheitstacho.eu/?peers=communityPeers&quot;&gt;link&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 13 Mar 2015 23:04:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/13/tacho.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/13/tacho.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Our Projects</title>
        <description>&lt;p&gt;Over the time, we developed a number of projects, which we mostly published on &lt;a href=&quot;https://github.com/dtag-dev-sec/&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Parts of them were developed in “one day a month” projects, others in spare time of dedicated persons.
Our “one day a month” approach from the central security organization basically means, that the
security employees can work one day a month on a technical topic, aside from day-to-day business. The topic must be somehow related to their work, but does not necessarily have to be security-focussed.&lt;/p&gt;

&lt;h1 id=&quot;public-projects&quot;&gt;Public Projects&lt;/h1&gt;

&lt;h2 id=&quot;t-pot-ce&quot;&gt;T-Pot CE&lt;/h2&gt;

&lt;p&gt;T-Pot CE (Community Edition) is a honeypot framework, which is based on existing honeypots (&lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt;, &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;), the network IDS/IPS &lt;a href=&quot;http://suricata-ids.org/&quot;&gt;suricata&lt;/a&gt;, &lt;a href=&quot;http://www.elasticsearch.org/overview/&quot;&gt;elk&lt;/a&gt;, &lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;ewsposter&lt;/a&gt; and some
&lt;a href=&quot;https://www.docker.com/&quot;&gt;docker&lt;/a&gt; magic. A detailed description can be found in &lt;a href=&quot;http://dtag-dev-sec.github.io/mediator/feature/2015/03/11/concept.html&quot;&gt;this article&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nodepot&quot;&gt;Nodepot&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/schmalle/Nodepot&quot;&gt;Nodepot&lt;/a&gt; is our &lt;a href=&quot;http://glastopf.org/&quot;&gt;glastopf&lt;/a&gt; copycat, a web application honeypot based on NodeJS. Code is available &lt;a href=&quot;https://github.com/schmalle/Nodepot&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;nodejs-hp-feed-module&quot;&gt;NodeJS HP Feed Module&lt;/h2&gt;

&lt;p&gt;As an option for Nodepot you can use &lt;a href=&quot;https://github.com/rep/hpfeeds&quot;&gt;hpfeeds&lt;/a&gt; to share data.
We wrote a small NPM module to support hpfeeds that can be found &lt;a href=&quot;https://github.com/schmalle/nodejs-hpfeeds&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;ewsposter&quot;&gt;EWSposter&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/dtag-dev-sec/ews&quot;&gt;EWSposter&lt;/a&gt; is a python application that collects information from multiple honeypot sensors and posts it to central collection services like the DTAG early warning system or hpfeeds.&lt;/p&gt;

&lt;h2 id=&quot;ip-blacklist&quot;&gt;IP-Blacklist&lt;/h2&gt;

&lt;p&gt;Our Early Warning System provides an API which can be queried for IP addresses that have been associated with malicious activities in our sensors.
The Java example code for the IP blacklist is available &lt;a href=&quot;https://github.com/dev-t-sec/BadIPFetch&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want to get an account for retrieving data, please contact us at cert @ telekom.de.&lt;/p&gt;

&lt;h1 id=&quot;notable-internal-projects&quot;&gt;Notable Internal Projects&lt;/h1&gt;
&lt;p&gt;Some of our projects have been research driven proof-of-concepts that never reached a status worth publishing, others were fulfilling purely internal purposes. However, to give you an idea of what we do for the Early Warning System of Deutsche Telekom, we wanted to mention the following projects.&lt;/p&gt;

&lt;h2 id=&quot;sicherheitstachoeu---securitydashboardeu&quot;&gt;sicherheitstacho.eu - securitydashboard.eu&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&quot;http://sicherheitstacho.eu&quot;&gt;“Sicherheitstacho” / “Securitydashboard”&lt;/a&gt; is our eye-candy vizualization frontend that displays live cyberattacks in a manager-friendly way. It provides live statistics from the sensor network we setup in the last years.  &lt;br /&gt;
… but of course, we also have a more technical system suitable for some analysis. ;-)&lt;/p&gt;

&lt;h2 id=&quot;honeypi---raspberry-pi-honeypots&quot;&gt;&lt;em&gt;honeypi&lt;/em&gt; - Raspberry PI Honeypots&lt;/h2&gt;
&lt;p&gt;We are all fans of cool technologies, and we love playing with new toys. When the Raspberry PI got released, we built a custom ISO image with preinstalled &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;. We added central management to the system using &lt;a href=&quot;https://puppetlabs.com/&quot;&gt;puppet&lt;/a&gt;, and &lt;a href=&quot;/assets/images/rpi.jpg&quot; target=&quot;_blank&quot;&gt;rolled out&lt;/a&gt; approx. 80 to the international subsidaries of Deutsche Telekom. It was our first try to create low-efffort, easy-to-deploy honeypots to broaden our sensor base.&lt;/p&gt;

&lt;p&gt;We further added a &lt;a href=&quot;/assets/images/honeypi-display1.jpg&quot; target=&quot;blank&quot;&gt;display&lt;/a&gt; that provides some statistics and later a &lt;a href=&quot;/assets/images/honeypi-display2.jpg&quot; target=&quot;blank&quot;&gt;touchscreen&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;As the image is configured to be used internally, we have not planned to make it publicly available.&lt;/p&gt;

&lt;h2 id=&quot;smartphone-honeypots&quot;&gt;Smartphone Honeypots&lt;/h2&gt;
&lt;p&gt;In early 2011 we setup a mobile honeypot project wich simulates the network footprint of smartphones (iOS and Android). &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt; was modified so that the filesystem and commands matched those of an Android device as well as a jailbroken iPhone. Other honeypot daemons like &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt; and  &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; were added. After attaching them to the 3G network, they were able to capture some device-specific attacks, e.g. some attack directly aiming for the addessbook and photos of the jailbroken iPhone.&lt;br /&gt;
Some results are documented &lt;a href=&quot;http://arxiv.org/pdf/1301.7257v1.pdf&quot;&gt;here&lt;/a&gt;. Further, if you understand German, you can find some more information including a short video &lt;a href=&quot;http://www.heise.de/security/meldung/Smartphone-Honeypots-im-Mobilfunknetz-der-Telekom-1630359.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;honeydroid---android-honeypot&quot;&gt;&lt;em&gt;honeydroid&lt;/em&gt; - Android Honeypot&lt;/h2&gt;
&lt;p&gt;As a proof-of-concept, we modified &lt;a href=&quot;/assets/images/honeydroid.jpg&quot; target=&quot;blank&quot;&gt;Android phones&lt;/a&gt; so that their cellular network stack acts as a honeypot and displays some attack statistics. And yep, &lt;em&gt;&lt;a href=&quot;/assets/images/app.jpg&quot; target=&quot;blank&quot;&gt;there’s an app for that&lt;/a&gt;&lt;/em&gt; (kindof). German speaking people can find some more background information &lt;a href=&quot;http://www.heise.de/security/meldung/Honeydroid-Android-Handy-wird-zur-Hackerfalle-1980058.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;rdp-honeypot&quot;&gt;RDP Honeypot&lt;/h2&gt;
&lt;p&gt;We are currently developing a RDP honeypot that captures RDP scans and login attempts.&lt;/p&gt;

&lt;h2 id=&quot;cvemapper&quot;&gt;CVEmapper&lt;/h2&gt;
&lt;p&gt;Another project we have been working on is the CVEmapper. The CVEmapper takes information sumitted by our EWSposter as input and tries to determine if a known vulnerability (CVE) is currently being exploited.&lt;/p&gt;

</description>
        <pubDate>Tue, 10 Mar 2015 15:34:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/10/stuff.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/10/stuff.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>Meet us at the Honeynet Workshop 2015 in Stavanger</title>
        <description>&lt;p&gt;We truely believe in the power of a strong community.
Last year, some of us joined &lt;a href=&quot;http://honeynet.org&quot;&gt;The Honeynet Project&lt;/a&gt; where we found shelter at the &lt;a href=&quot;http://www.sysenter-honeynet.org/&quot;&gt;Sysenter Chapter&lt;/a&gt;. Some of us will attend this year’s &lt;a href=&quot;http://stavanger2015.honeynet.org&quot;&gt;Honeynet Workshop&lt;/a&gt; in Stavanger, Norway.&lt;/p&gt;

&lt;p&gt;We are really looking forward to the technical discussions and the exchange of opinions and experience.&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Mar 2015 15:34:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/01/meet.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/01/meet.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
      <item>
        <title>About</title>
        <description>&lt;p&gt;Deutsche Telekom’s honeypot project was started in 2010 by a small group of enthusiasts. We initially started with Lukas Rist’s great &lt;a href=&quot;http://glastopf.org/&quot;&gt;Glastopf web honeypot&lt;/a&gt; and soon added further honeypot daemons like &lt;a href=&quot;https://github.com/desaster/kippo&quot;&gt;kippo&lt;/a&gt;, &lt;a href=&quot;http://honeytrap.carnivore.it/&quot;&gt;honeytrap&lt;/a&gt; and &lt;a href=&quot;http://dionaea.carnivore.it/&quot;&gt;dionaea&lt;/a&gt;. Over the next years we deployed more and more honeypots.&lt;/p&gt;

&lt;p&gt;Data captured on our honeypot sensors is visualized on our &lt;a href=&quot;http://www.sicherheitstacho.eu&quot;&gt;Sicherheitstacho&lt;/a&gt; and we further use the information
e.g. to inform our customers regarding infections.&lt;/p&gt;

&lt;p&gt;We currently run about 180 honeypot sensors as part of Deutsche Telekom’s early warning system. Individual maintainance of such large number of systems became a time consuming and painful task. As a first step we created a standardized Raspberry PI honeypot image, which is managed by Puppet and distributed across our national subsidaries. To increase the efficiency even more, we decided to build T-Pot, a highly modular approach.&lt;/p&gt;

&lt;h1 id=&quot;contact&quot;&gt;Contact&lt;/h1&gt;

&lt;p&gt;If you want reach out to us, best contact us via email at cert @ telekom.de&lt;/p&gt;

&lt;h1 id=&quot;thanks&quot;&gt;Thanks&lt;/h1&gt;

&lt;p&gt;We want to thank the following people / organizations / projects for their great work.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Lutz Wischmann&lt;/strong&gt; (our consultant / friend / main developer of Sicherheitstacho / Honeypot backend systems)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Honeypot developers&lt;/strong&gt; for their patient support for our individual feature requests&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;a href=&quot;http://www.honeynet.org&quot;&gt;The Honeynet Project&lt;/a&gt;&lt;/strong&gt; for providing great tools and a platform for discussion&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Christian Müller / Mark Bolten from CRONON / Strato&lt;/strong&gt; for (as always) great support&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Andreas Kraft &amp;amp; Alexander Mannecke&lt;/strong&gt; for their cool dsl router protection demo based on honeypot data and the mobile sicherheitstacho app&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;deutsche-telekoms-honeypot-team&quot;&gt;Deutsche Telekom’s Honeypot Team&lt;/h1&gt;

&lt;p&gt;The team consists of several people, who spend some work time and private time on this project.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Markus Schroer&lt;/li&gt;
  &lt;li&gt;Rainer Schmidt&lt;/li&gt;
  &lt;li&gt;Markus Schmall&lt;/li&gt;
  &lt;li&gt;André Vorbach&lt;/li&gt;
  &lt;li&gt;Marco Ochse&lt;/li&gt;
  &lt;li&gt;Norbert Krummen&lt;/li&gt;
  &lt;li&gt;another unnamed individual ;-)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;initial-jekyll-template-written-by-dirk-fabisch&quot;&gt;Initial Jekyll template written by Dirk Fabisch&lt;/h3&gt;

&lt;p&gt;A medium inspired Jekyll blog theme. The basic idea came from the Ghost theme 
&lt;a href=&quot;http://www.svenread.com/readium-ghost-theme/&quot;&gt;Readium 2.0&lt;/a&gt;. I use mediator on my own blog &lt;a href=&quot;blog.base68.com&quot;&gt;The Base&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can &lt;strong&gt;download&lt;/strong&gt; the theme here:
&lt;a href=&quot;https://github.com/dirkfabisch/mediator&quot;&gt;https://github.com/dirkfabisch/mediator&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Mar 2015 15:34:25 +0100</pubDate>
        <link>http://dtag-dev-sec.github.io//mediator/feature/2015/03/01/about.html</link>
        <guid isPermaLink="true">http://dtag-dev-sec.github.io//mediator/feature/2015/03/01/about.html</guid>
        
        <category>featured</category>
        
        
        <category>mediator</category>
        
        <category>feature</category>
        
      </item>
    
  </channel>
</rss>
